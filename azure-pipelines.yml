trigger:
  - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: 'Build stage'
    jobs:
      - job: Build
        displayName: 'Build job'
        steps:
          - task: UseNode@1
            displayName: 'Install Node.js'
            inputs:
              version: '16.x'

          - script: |
              npm install
              npm run build --if-present
              npm run test --if-present
            displayName: 'Run npm install, build, and test'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy to Linux VM'
    dependsOn: Build
    jobs:
      - deployment: VMDeploy
        displayName: 'Web deploy'
        environment:
          name: 'Linux Env'
          resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - script: |
                    echo "Desplegando aplicación en la VM..."
                    unzip $(Pipeline.Workspace)/drop/$(Build.BuildId).zip -d deploy_folder
                    # Aquí podrías copiar los archivos al directorio real de tu app, por ejemplo:
                    # sudo cp -r deploy_folder/* /var/www/html/
                  displayName: 'Despliegue en Linux VM'
